---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: node-ts-restfull-api
  title: Node Typescript RestfullApi Backstage
spec:
  owner: user:guest
  type: service
  parameters:
    - title: Basic sets
      required:
        - name
        - description
        - owner
        - system
        - azure_docker_registry_scv_connection
        - azure_docker_registry_hostname
        - database_username
        - database_password
        - database_database
        - database_hostname
        - database_hostport
        - application_port
      properties:
        name:
          title: Artifact Name
          type: string
          description: The name of the artifact. It must start and end with a letter, and
            can contain underscores and numbers in between. Maximum length is 15
            characters.
          pattern: ^[a-z][a-z0-9_]{0,13}[a-z]$
          minLength: 3
          maxLength: 15
        description:
          title: Artifact Description
          type: string
          description: A short description of the artifact.
        owner:
          title: Owner
          type: string
          description: The owner of the artifact.
          ui:field: MyGroupsPicker
        system:
          title: System
          type: string
          description: The system this artifact belongs to.
          ui:field: EntityPicker
          ui:options:
            variant: inline
            filter:
              kind: System
            create: false
        azure_docker_registry_scv_connection:
          title: Azure Docker Registry Service Connection
          type: string
          description: The service connection string for Azure Docker Registry.
        azure_docker_registry_hostname:
          title: Azure Docker Registry Hostname
          type: string
          description: The hostname for the Azure Docker Registry. It should follow the
            syntax of a valid hostname.
          pattern: ^(?!-)[A-Za-z0-9-]{1,63}(?<!-)(?:\.[A-Za-z0-9-]{1,63})*$
        database_username:
          title: Database Username
          type: string
          description: The username for the database connection.
        database_password:
          title: Database Password
          type: string
          description: The password for the database connection.
        database_database:
          title: Database Name
          type: string
          description: The name of the database.
        database_hostname:
          title: Database Hostname
          type: string
          description: The hostname for the database connection.
        database_hostport:
          title: Database Host Port
          type: integer
          description: The port number for the database host. It must be a valid integer.
          minimum: 1
          maximum: 65535
        application_port:
          title: Application Port
          type: integer
          description: The port on which the application will run.
          minimum: 1
          maximum: 65535
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: "{{ parameters.name }}"
          description: "{{ parameters.description }}"
          owner: "{{ parameters.owner }}"
          system: "{{ parameters.system }}"
          repoUrl: ${{ parameters.repoUrl }}
          azure_docker_registry_scv_connection: "{{ parameters.azure_docker_registry_scv_connection }}"
          azure_docker_registry_hostname: "{{ parameters.azure_docker_registry_hostname }}"
          database_username: "{{ parameters.database_username }}"
          database_password: "{{ parameters.database_password }}"
          database_database: "{{ parameters.database_database }}"
          database_hostname: "{{ parameters.database_hostname }}"
          database_hostport: "{{ parameters.database_hostport }}"
          application_port: "{{ parameters.application_port }}"

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts:
          - github.com
        repoUrl: ${{ parameters.repoUrl }}
        
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
