---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: node-ts-restfull-api
  title: Node Typescript RestfullApi Backstage
spec:
  owner: user:guest
  type: service
  parameters:
    - title: Basic sets
      required:
        - name
        - description
        - owner
        - system
        - azure_docker_registry_scv_connection
        - azure_docker_registry_hostname
        - database_username
        - database_password
        - database_database
        - database_hostname
        - database_hostport
        - application_port
      properties:
        name:
          title: Artifact Name
          type: string
          description: The name of the artifact. It must start and end with a letter, and
            can contain underscores and numbers in between. Maximum length is 30
            characters.
          pattern: ^[a-z]{1}(?:\-[a-z,0-9]{1,28})[a-z,0-9]{1}$
          minLength: 3
          maxLength: 30
        description:
          title: Artifact Description
          type: string
          description: A short description of the artifact.
        owner:
          title: Owner
          type: string
          description: The owner of the artifact.
          ui:field: MyGroupsPicker
        system:
          title: System
          type: string
          description: The system this artifact belongs to.
          ui:field: EntityPicker
          ui:options:
            variant: inline
            filter:
              kind: System
            create: false
        azure_docker_registry_scv_connection:
          title: Azure Docker Registry Service Connection
          type: string
          default: 33c2a3dc-bf12-42a5-acc7-54a52c421fa0
          description: The service connection string for Azure Docker Registry.
        azure_docker_registry_hostname:
          title: Azure Docker Registry Hostname
          type: string
          default: culturadevopsit.azurecr.io
          description: The hostname for the Azure Docker Registry. It should follow the
            syntax of a valid hostname.
          pattern: ^(?!-)[A-Za-z0-9-]{1,63}(?<!-)(?:\.[A-Za-z0-9-]{1,63})*$
        database_username:
          title: Database Username
          type: string
          default: teseo
          description: The username for the database connection.
        database_password:
          title: Database Password
          type: string
          default: teseo
          description: The password for the database connection.
        database_database:
          title: Database Name
          type: string
          default: teseo
          description: The name of the database.
        database_hostname:
          title: Database Hostname
          type: string
          default: teseo-database-service
          description: The hostname for the database connection.
        database_hostport:
          title: Database Host Port
          type: integer
          default: 3306
          description: The port number for the database host. It must be a valid integer.
          minimum: 1
          maximum: 65535
        application_port:
          title: Application Port
          type: integer
          default: 3305
          description: The port on which the application will run.
          minimum: 1
          maximum: 65535
    - title: Choose a location
      description: >-
        Organization is an Azure DevOps organization. Owner is an Azure DevOps project.
        Repository is the name of the repository Backstage will create for you.
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - dev.azure.com

  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./skeleton
        values:
          name: "${{ parameters.name }}"
          description: "${{ parameters.description }}"
          owner: "${{ parameters.owner }}"
          system: "${{ parameters.system }}"
          repoUrl: ${{ parameters.repoUrl }}
          azure_docker_registry_scv_connection: "${{ parameters.azure_docker_registry_scv_connection }}"
          azure_docker_registry_hostname: "${{ parameters.azure_docker_registry_hostname }}"
          database_username: "${{ parameters.database_username }}"
          database_password: "${{ parameters.database_password }}"
          database_database: "${{ parameters.database_database }}"
          database_hostname: "${{ parameters.database_hostname }}"
          database_hostport: "${{ parameters.database_hostport }}"
          application_port: "${{ parameters.application_port }}"
        
    - id: publish
      name: Publish
      action: publish:azure
      input:
        defaultBranch: main
        allowedHosts: ["dev.azure.com"]
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}


    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
